intrinsic struct Num
{
	intrinsic add(a:Num, b:Num);
	intrinsic sub(a:Num, b:Num);
}

constraint Indexer(i:Num);
constraint Binary(a, b);

intrinsic list;
intrinsic struct List(at:Indexer, count:Num)
{
	intrinsic fold(list:List, initial, accumulator:Binary);
}

add = Num.add;
addFromInstanceFunction = 5.add;
getAdd(a:Num) = a.add;
sum(numbers:List) = numbers.fold(0, _(accum, element) = accum.add(element));
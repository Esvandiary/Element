struct Vector2(x:Num, y:Num)
{
    
}

struct Vector3(x:Num, y:Num, z:Num)
{
    add(a:Vector3, b:Vector3):Vector3 = Vector3(a.x.add(b.x), a.y.add(b.y), a.z.add(b.z))
    mul(a:Vector3, b:Vector3) = memberwise(Num.mul, a, b)
}

factorial(a:Num):Num
{
    return = for(Vector2(1, 1), condition, body).y
    condition(v):Bool = v.x.leq(a)
    body(v) = Vector2(v.x.add(1), v.y.mul(v.x))
}

#fix this when anonymous scopes are working
#factorialExpressionBodied(a:Num):Num = for({i = a, v = 1},
#                                     _(tup):Bool = tup.i.gt(0),
#                                     _(tup) = {i = tup.i.sub(1), v = tup.v.mul(tup.i)})
#                                 .v

struct MyStruct(vector:Vector3)
makeMyStruct(a:Num) = MyStruct(Vector3(a, a, a))
predicate(a:MyStruct):Bool = false
iterateWithMyStruct(a:Num) = for(makeMyStruct(a), predicate, _(a) = a).vector.add(Vector3(5, 5, 5)).x
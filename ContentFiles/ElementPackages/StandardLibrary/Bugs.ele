namespace Bugs
{
    constraint Unary(x:Num):Num

    wrappedLambdasOneLine:Unary
    {
        wrap(unary:Unary):Unary
        {
            return(x:Num):Num = unary(x)
        }

        foo = _(u:Num):Num = u
        fooWrapped = wrap(foo)
        fooWrappedTwice = wrap(fooWrapped)
        return = fooWrappedTwice
    }

    wrappedLambdasExplicit:Unary
    {
        wrap(unary:Unary):Unary
        {
            return = _(x:Num):Num
            {
                return = unary(x)
            }
        }

        foo = _(u:Num):Num = u
        fooWrapped = wrap(foo)
        fooWrappedTwice = wrap(fooWrapped)
        return = fooWrappedTwice
    }
}
